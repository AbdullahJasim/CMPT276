<input type="checkbox" id="twitterCheck">Twitter<br>
<input type="checkbox" id="instagramCheck">Instagram<br>
<input type="checkbox" id="googleCheck">Google+<br>
<br><br>
<input type="checkbox" id="dateCheck">Date<br>
<input type="checkbox" id="popularityCheck">Popularity<br>
<input type="checkbox" id="sizeCheck">Size<br>
<br><br>
<canvas id="infoVis" width="800" height="800"></canvas>
<br><br>
<p id="chosenResult"></p>

<script type="text/javascript">
//Global arrays
  tweets = [];
  instagrams = [];
  googles = [];

//Global tweet max / min values
  shortestTweet = 9999999999;
  longestTweet = 0;
  oldestTweet = 9999999999;
  mostRecentTweet = 0;
  mostPopularTweet = 0;
  leastPopularTweet = 9999999999;

//Global google max / min values
  shortestGoogle = 9999999999;
  longestGoogle = 0;
  oldestGoogle = 9999999999;
  mostRecentGoogle = 0;
  leastPopularGoogle = 9999999999;
  mostPopularGoogle = 0;

//Global instagram max / min values
  smallestInstagram = 9999999999;
  largestInstagram = 0;
  oldestInstagram = 9999999999;
  mostRecentInstagram = 0;
  leastPopularInstagram = 9999999999;
  mostPopularInstagram = 0;

//Function to avoid duplicate tweet entries
  function checkIfTweetExists(element) {
    for (var i = 0; i < tweets.length; i++) {
      if (tweets[i].textvalue == element.textvalue) {
        return true;
      }
    }
    return false;
  }

//Function to change a tweet time stamp to an int value
//Format: 2015-11-28 19:48:26 UTC
  function getTweetTimeValue(time) {
    var temp;
    var sum = 0;
    temp = parseInt(time.substring(0, 4));
    sum += (temp - 2000) * 15;
    temp = parseInt(time.substring(5, 7));
    sum += (temp) * 10;
    temp = parseInt(time.substring(8, 10));
    sum += (temp) * 7;
    temp = parseInt(time.substring(11, 13));
    sum += (temp) * 4;
    temp = parseInt(time.substring(14, 16));
    sum += (temp) * 2;
    temp = parseInt(time.substring(17, 19));
    sum += temp;
    return sum;
  }

//Function to change a google+ time stamp to an int value
//Format: 2015-11-28T18:33:10.896Z
  function getGoogleTimeValue(time) {
    var temp;
    var sum = 0;
    var temp = parseInt(time.substring(0, 4));
    sum += (temp - 2000) * 15;
    var temp = parseInt(time.substring(5, 7));
    sum += (temp) * 10;
    var temp = parseInt(time.substring(8, 10));
    sum += (temp) * 7;
    var temp = parseInt(time.substring(11, 13));
    sum += (temp) * 4;
    var temp = parseInt(time.substring(14, 16));
    sum += (temp) * 2;
    var temp = parseInt(time.substring(17, 19));
    sum += temp;
    return sum;
  }

//Function to change the instagram time stamp to an int value
//Format: 1279340983
  function getInstagramTimeValue(time) {
    var date = new Date (parseInt(time) * 1000);
    var temp = date.getYear();
    var sum = 0;
    temp += 1900;
    sum += (temp - 2000) * 15;
    temp = date.getMonth();
    sum += (temp) * 10;
    temp = date.getDay();
    sum += (temp) * 7;
    temp = date.getHours();
    sum += (temp) * 4;
    temp = date.getMinutes();
    sum += (temp) * 2;
    temp = date.getSeconds();
    sum += temp;

    return sum;
  }
</script>

<% provide(:title, 'Search') %>
<%= button_tag "Send results to my email" %>
<script>
$("button").click(function() {
  $.ajax({
    type: "POST",
    url: "/mailresults",
    success: function(data) {
      if (data.status == "404")
        alert(data.error);
      else
        alert("Email sent.");
    }
  });
});
</script>

<% no_results = true %>


<% if !@googleplus.items.nil? %>
  <% no_results = false %>
  <h1>Search Results for <%= @query %> on Google+</h1>
  <% @googleplus.items.each do |google| %>
    <script type="text/javascript">
      var canvas = document.getElementById("infoVis");
      var ctx = canvas.getContext("2d");

  //Creating a google
      var google = new Object();
      var time = ("<%= (google.published) %>");
      var text = ("<%= escape_javascript (google.object.content) %>");
      google.time = getGoogleTimeValue(time);
      google.popularity = ("<%= (google.object.plusoners.total_items) %>") + ("<%= (google.object.resharers.total_items) %>");
      google.textValue = text;
      google.textLength = (text.length) / 50;
      google.radius = google.textLength;
      google.hit = false;
      google.x = google.textLength;
      google.y = google.textLength;

  //Update the global min / max values
      if (google.textLength < shortestGoogle) {
        shortestGoogle = google.textLength;
      } else if (google.textLength > longestGoogle) {
        longestGoogle = google.textLength;
      }

      if (google.time < oldestGoogle) {
        oldestGoogle = google.time;
      } else if (google.time > mostRecentGoogle) {
        mostRecentGoogle = google.time;
      }

      if (google.popularity < leastPopularGoogle) {
        leastPopularGoogle = google.popularity;
      } else if (google.popularity > mostPopularGoogle) {
        mostPopularGoogle = google.popularity;
      }

      googles.push(google);
    </script>

<!--
  <div>
    <p>POST URL: <%= post.url %></p>
    <%= raw post.object.content %>
  </div>
  <br><br>
-->
  <% end %>
<% end %>

<% tweet_count = 0 %>
<% @twitter.each do |tweet| %>
    <% tweet_count = tweet_count + 1 %>
<% end %>

<% if tweet_count != 0 %>
  <% no_results = false %>
  <% tweet_count = 0 %>
  <h1>Search Results for <%= @query %> on Twitter</h1>
  <% @twitter.each do |tweet| %>
    <script type="text/javascript">
      var canvas = document.getElementById("infoVis");
      var ctx = canvas.getContext("2d");

  //Creating a tweet
      var tweet = new Object();
      var time = ("<%= (tweet.created_at) %>");
      var text = ("<%= escape_javascript (tweet.text) %>");
      tweet.time = getTweetTimeValue(time);
      tweet.popularity = parseInt("<%= (tweet.favorite_count) %>") + parseInt("<%= (tweet.retweet_count) %>");
      tweet.textvalue = text;
      tweet.textlength = (text.length) / 10;
      tweet.radius = tweet.textlength;
      tweet.hit = false;
      tweet.x = tweet.textlength;
      tweet.y = tweet.textlength;

  //If we're adding the tweet to the array, update the points of the spectrum for length, date and popularity
      if (checkIfTweetExists(tweet) == false) {
        if (tweet.textlength < shortestTweet) {
          shortestTweet = tweet.textlength;
        } else if(tweet.textlength > longestTweet) {
          longestTweet = tweet.textlength;
        }

        if (tweet.time < oldestTweet) {
          oldestTweet = tweet.time;
        } else if (tweet.time > mostRecentTweet) {
          mostRecentTweet = tweet.time;
        }

        if (tweet.popularity < leastPopularTweet) {
          leastPopularTweet = tweet.popularity;
        } else if (tweet.popularity > mostPopularTweet) {
          mostPopularTweet = tweet.popularity;
        }
        tweets.push(tweet);
      }
    </script>

<!--
    <p><%= tweet.text %></p>
    <a href=<%='#' + tweet_count.to_s %> class="btn btn-info" data-toggle="collapse">Sentiment Info</a>
      <div id=<%=tweet_count.to_s %> class="collapse">
        <p><%= @tweet_sentiment[tweet_count]%></p>
        <% if @tweet_sentiment[tweet_count] > 0 %>
          <p>:)</p>
        <% elsif @tweet_sentiment[tweet_count] < 0 %>
          <p>:(</p>
        <%else%>
          <p>:|</p>
        <%end%>
          <% tweet_count = tweet_count + 1 %>
      </div>
    </a>
-->
  <% end %>
  <h5> The tweets had a tendency to be:
  <% if @tweet_sentiment.inject{ |sum, el| sum + el }.to_f / @tweet_sentiment.size > 0%>
    <%= 'Positive' %>
  <% elsif @tweet_sentiment.inject{ |sum, el| sum + el }.to_f / @tweet_sentiment.size < 0%>
    <%= 'Negative' %>
  <% else %>
    <%= 'Neutral' %>
  <%end%>
</h5>
<% end %>

<% if !@instagram.nil? %>
 <% no_results = false %>
 <h1>Search Results for <%= @query %> on Instagram</h1>
 <% @instagram.each do |instagram| %>
   <script type="text/javascript">
     //<%= image_tag inst.images.standard_resolution.url %>
     var canvas = document.getElementById("infoVis");
     var ctx = canvas.getContext("2d");

   //Creating an instagram
     var instagram = new Object();
     var time = ("<%= inst.created_time %>");
     instagram.time = getInstagramTimeValue(time);
     instagram.popularity = parseInt("<%= inst.likes[:count] %>"); //count is a reserved word, so we have to use a nested notation instead
     instagram.imageSize = ("<%= inst.images.standard_resolution.width %>") * ("<%= inst.images.standard_resolution.height %>");
     instagram.imageURL = ("<%= inst.images.standard_resolution.url %>");
     instagram.radius = instagram.imageSize / 100;
     instagram.hit = false;
     instagram.x = 0;
     instagram.y = 0;

   //Update the global min / max values
     if (instagram.imageSize < smallestInstagram) {
       smallestInstagram = instagram.imageSize;
     } else if (instagram.imageSize > largestInstagram) {
       largestInstagram = instagram.imageSize;
     }

     if (instagram.time < oldestInstagram) {
       oldestInstagram = instagram.time;
     } else if (instagram.time > mostRecentInstagram) {
       mostRecentInstagram = instagram.time;
     }

     if (instagram.popularity < leastPopularInstagram) {
       leastPopularInstagram = instagram.popularity;
     } else if (instagram.popularity > mostPopularInstagram) {
       mostPopularInstagram = instagram.popularity;
     }

     instagrams.push(instagram);
   </script>

<!--
  <a href = <%= instagram.link%> target="_blank">
    <%= image_tag instagram.images.thumbnail.url %>
  </a>
-->
 <% end %>
<% end %>

<% if no_results %>
  <h1> Your search for:</h1>
    <h2><%= @query %></h2>
  <h1>returned no results</h1>
<% end %>

<script type="text/javascript">
//Functions to change each Twitter value to be more relative
  function updateTweetTimes(sorting) {
    if (sorting == "ascending") {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].time = (tweets[i].time - oldestTweet) * 10;
        tweets[i].time += 30;
      }
    } else {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].time = (mostRecentTweet - tweets[i].time) * 10;
        tweets[i].time += 30;
      }
    }
  }

  function updateTweetLengths(sorting) {
    if (sorting == "ascending") {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].textlength = (tweets[i].textlength - shortestTweet) * 30;
        tweets[i].textlength += 60;
        tweets[i].radius = tweets[i].textlength / 15;
      }
    } else {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].textlength = (longestTweet - tweets[i].textlength) * 30;
        tweets[i].textlength += 60;
        tweets[i].radius = tweets[i].textlength / 15;
      }
    }
  }

  function updateTweetPopularity(sorting) {
    if (sorting == "ascending") {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].popularity = (tweets[i].popularity - leastPopularTweet) * 30;
        tweets[i].popularity += 60;
      }
    } else {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].popularity = (mostPopularTweet - tweets[i].popularity) * 30;
        tweets[i].popularity += 60;
      }
    }
  }

  function updateTweetsX(type) {
    if (type == "date") {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].x = tweets[i].time;
      }
    } else if (type == "popularity") {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].x = tweets[i].popularity;
      }
    } else if (type == "size") {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].x = tweets[i].textlength;
      }
    }
  }

  function updateTweetsY(type) {
    if (type == "date") {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].y = tweets[i].time;
      }
    } else if (type == "popularity") {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].y = tweets[i].popularity;
      }
    } else if (type == "size") {
      for (var i = 0; i < tweets.length; i++) {
        tweets[i].y = tweets[i].textlength;
      }
    }
  }
</script>

<% if @freq_search_option  && @current_user.memberType == "Paid" %>
 <h1>Frequent Patterns</h1>
 <%if !@freq_words.nil? %>
  <%@freq_words.each do |p| %>
    <%= form_tag("/search", method: "get") do%>
      <h5><%=p%>
      <%=hidden_field_tag "q", p%>
      <%=hidden_field_tag "freq_words", 1%>
      <%= button_tag "Quick Search", class: "mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent", id: "quick_search" %>
      </h5>
    <%end%>
  <%end%>
<%end%>

<% end %>
